// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeguroViagem.DAO;

namespace SeguroViagem.Migrations
{
    [DbContext(typeof(SeguroViagemContexto))]
    [Migration("20190828140921_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeguroViagem.Models.AcrescimoMeioTransporte", b =>
                {
                    b.Property<int>("TransporteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AcrescimoTransporte");

                    b.Property<int>("MeioTransporte");

                    b.Property<int>("SegId");

                    b.HasKey("TransporteId");

                    b.HasIndex("SegId");

                    b.ToTable("AcrescimosMeioTransporte");
                });

            modelBuilder.Entity("SeguroViagem.Models.AcrescimoMotivoViagem", b =>
                {
                    b.Property<int>("MotivoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AcrescimoMotivo");

                    b.Property<int>("MotivoViagem");

                    b.Property<int>("SegId");

                    b.HasKey("MotivoId");

                    b.HasIndex("SegId");

                    b.ToTable("AcrescimosMotivoViagem");
                });

            modelBuilder.Entity("SeguroViagem.Models.AcrescimoTipoViagem", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AcrescimoViagem");

                    b.Property<int>("SegId");

                    b.Property<int>("TipoViagem");

                    b.HasKey("TipoId");

                    b.HasIndex("SegId");

                    b.ToTable("AcrescimosTipoViagem");
                });

            modelBuilder.Entity("SeguroViagem.Models.Cotacao", b =>
                {
                    b.Property<int>("CotId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DestinoId");

                    b.Property<DateTime>("Ida");

                    b.Property<int>("MeioTransporte");

                    b.Property<int>("MotivoViagem");

                    b.Property<int>("OrigemId");

                    b.Property<int>("QtdeDias");

                    b.Property<int>("QtdeViajantes");

                    b.Property<int>("TipoViagem");

                    b.Property<DateTime>("Volta");

                    b.HasKey("CotId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("OrigemId");

                    b.ToTable("Cotacoes");
                });

            modelBuilder.Entity("SeguroViagem.Models.DadosViajante", b =>
                {
                    b.Property<int>("ViajanteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired();

                    b.Property<int?>("CEP")
                        .IsRequired();

                    b.Property<string>("CPF")
                        .IsRequired();

                    b.Property<string>("Cidade")
                        .IsRequired();

                    b.Property<string>("Complemento");

                    b.Property<int?>("Contato1")
                        .IsRequired();

                    b.Property<int?>("Contato2");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Endereco")
                        .IsRequired();

                    b.Property<string>("Estado")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int?>("Numero")
                        .IsRequired();

                    b.Property<string>("Profissao")
                        .IsRequired();

                    b.Property<string>("Sexo")
                        .IsRequired();

                    b.Property<string>("Sobrenome")
                        .IsRequired();

                    b.HasKey("ViajanteId");

                    b.ToTable("DadosViajantes");
                });

            modelBuilder.Entity("SeguroViagem.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estados")
                        .IsRequired();

                    b.HasKey("EstadoId");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("SeguroViagem.Models.Seguradora", b =>
                {
                    b.Property<int>("SegId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Comissao");

                    b.Property<decimal?>("DespesasFarmacia")
                        .IsRequired();

                    b.Property<decimal?>("ExtBagagem")
                        .IsRequired();

                    b.Property<decimal?>("InvalidezPerm")
                        .IsRequired();

                    b.Property<decimal?>("MorteAcid")
                        .IsRequired();

                    b.Property<string>("NomeSeg")
                        .IsRequired();

                    b.Property<decimal?>("TransCorpo")
                        .IsRequired();

                    b.Property<double>("ValorPorDia");

                    b.Property<double>("ValorPorPessoa");

                    b.HasKey("SegId");

                    b.ToTable("Seguradoras");
                });

            modelBuilder.Entity("SeguroViagem.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SeguroViagem.Models.AcrescimoMeioTransporte", b =>
                {
                    b.HasOne("SeguroViagem.Models.Seguradora", "Seguradora")
                        .WithMany("AcrescimosTransportes")
                        .HasForeignKey("SegId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeguroViagem.Models.AcrescimoMotivoViagem", b =>
                {
                    b.HasOne("SeguroViagem.Models.Seguradora", "Seguradora")
                        .WithMany("AcrescimosMotivos")
                        .HasForeignKey("SegId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeguroViagem.Models.AcrescimoTipoViagem", b =>
                {
                    b.HasOne("SeguroViagem.Models.Seguradora", "Seguradora")
                        .WithMany("AcrescimosViagens")
                        .HasForeignKey("SegId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeguroViagem.Models.Cotacao", b =>
                {
                    b.HasOne("SeguroViagem.Models.Estado", "Destino")
                        .WithMany("CotacaoDestino")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeguroViagem.Models.Estado", "Origem")
                        .WithMany("CotacaoOrigem")
                        .HasForeignKey("OrigemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
