@model SeguroViagem.ViewModel.ViajanteViewModel
@{
    ViewBag.Title = "Viajante";

}


<div class="card">
    <div class="card-body">
        <form id="formViajante" action="/Escolha/Prosseguir">

            @Html.HiddenFor(model => model.SegId, new { @id = "SeguradoraId" })

            <h2 style="text-align:center">Dados do Viajante:</h2>
            <br />
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Nome)
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    @*<input type="text" class="form-control" id="inputNome" placeholder="Nome">*@
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Sobrenome)
                    @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Sobrenome" } })
                    @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CPF)
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @placeholder = "CPF" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DataNascimento)
                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", @placeholder = "dd/mm/aa", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Sexo)
                    @Html.DropDownList("Sexo", new SelectList(Enum.GetValues(typeof(SeguroViagem.ViewModel.Sexo))), "Sexo", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-row">
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.CEP)
                    @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", @placeholder = "CEP", @id = "cep" } })
                    @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Endereco)
                    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control", @placeholder = "Endereço", @id = "rua" } })
                    @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-1">
                    @Html.LabelFor(model => model.Numero)
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nº" } })
                    @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Complemento)
                    @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apto 1404, bloco 02" } })
                    @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Bairro)
                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Zona 02", @id = "bairro" } })
                    @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Estado)
                    @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", @placeholder = "Paraná", @id = "uf" } })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Cidade)
                    @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cidade", @id = "cidade" } })
                    @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Contato1)
                    @Html.EditorFor(model => model.Contato1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contato" } })
                    @Html.ValidationMessageFor(model => model.Contato1, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Contato2)
                    @Html.EditorFor(model => model.Contato2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contato", @id = "telefone" } })
                    @Html.ValidationMessageFor(model => model.Contato2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Profissao)
                    @Html.EditorFor(model => model.Profissao, new { htmlAttributes = new { @class = "form-control", @placeholder = "Profissao", @id="ip" } })
                    @Html.ValidationMessageFor(model => model.Profissao, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />


            <!-- Button trigger modal -->
            <button id="btnPagamento" type="button" class="btn btn-primary">
                Pagamento
            </button>

            <!-- Modal -->
            <div class="modal fade" id="modalPagamento" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-body">
                        @Html.Partial("~/Views/Pagamento/Index.cshtml", Model)
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    $("#btnPagamento").on("click", function () {
        $.ajax({
            method: "POST",
            url: "Prosseguir",
            async: false,
            data: $('#formViajante').serialize()
        })
            .done(function (data) {
                if (data.formValido != undefined && data.formValido) {
                    $('#modalPagamento').modal("show")
                }
                else {
                    $("#dadosViajante").html(data);
                }
            });
    });



    $(document).ready(function () {

        function limpa_formulário_cep() {
            // Limpa valores do formulário de cep.
            $("#rua").val("");
            $("#bairro").val("");
            $("#cidade").val("");
            $("#uf").val("");
            $("#ibge").val("");
        }

        //Quando o campo cep perde o foco.
        $("#cep").blur(function () {

            //Nova variável "cep" somente com dígitos.
            var cep = $(this).val().replace(/\D/g, '');

            //Verifica se campo cep possui valor informado.
            if (cep != "") {

                //Expressão regular para validar o CEP.
                var validacep = /^[0-9]{8}$/;

                //Valida o formato do CEP.
                if (validacep.test(cep)) {

                    //Preenche os campos com "..." enquanto consulta webservice.
                    $("#rua").val("...");
                    $("#bairro").val("...");
                    $("#cidade").val("...");
                    $("#uf").val("...");
                    $("#ibge").val("...");

                    //Consulta o webservice viacep.com.br/
                    $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                        if (!("erro" in dados)) {
                            //Atualiza os campos com os valores da consulta.
                            $("#rua").val(dados.logradouro);
                            $("#bairro").val(dados.bairro);
                            $("#cidade").val(dados.localidade);
                            $("#uf").val(dados.uf);
                            $("#ibge").val(dados.ibge);
                        } //end if.
                        else {
                            //CEP pesquisado não foi encontrado.
                            limpa_formulário_cep();
                            alert("CEP não encontrado.");
                        }
                    });
                } //end if.
                else {
                    //cep é inválido.
                    limpa_formulário_cep();
                    alert("Formato de CEP inválido.");
                }
            } //end if.
            else {
                //cep sem valor, limpa formulário.
                limpa_formulário_cep();
            }
        });
    });

 @section Scripts {
        $(document).ready(function () {
            $("#telefone").inputmask("mask", { "mask": "(99) 9999-99999" });
            $("#cpf").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
            $("#cep").inputmask("mask", { "mask": "99999-999" });
            $("#nascimento").inputmask("mask", { "mask": "99/99/9999" });
            $("#preco").inputmask("mask", { "mask": "999.999,99" }, { reverse: true });
            $("#valor").inputmask("mask", { "mask": "#.##9,99" }, { reverse: true });
            $("#ip").inputmask("mask", { "mask": "999.999.999.999" });
        });
     }
</script>




