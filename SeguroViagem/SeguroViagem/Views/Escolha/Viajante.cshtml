@model SeguroViagem.ViewModel.ViajanteViewModel
@{
    ViewBag.Title = "Viajante";
    
}


<div class="card">
    <div class="card-body">
        <form action="/Escolha/Prosseguir">
            <h2 style="text-align:center">Dados do Viajante:</h2>
            <br />
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Nome)
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome" } })
                    @*<input type="text" class="form-control" id="inputNome" placeholder="Nome">*@
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Sobrenome)
                    @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Sobrenome" } })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.CPF)
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @placeholder = "CPF" } })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DataNascimento)
                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", @placeholder = "dd/mm/aa", @type = "date" } })
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Sexo)
                    @Html.DropDownList("Sexo", new SelectList(Enum.GetValues(typeof(SeguroViagem.ViewModel.Sexo))), "Sexo", new { @class = "form-control" })
                </div>
            </div>


            <div class="form-row">
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.CEP)
                    @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", @placeholder = "CEP", @id = "cep" } })
                </div>
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Endereco)
                    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control", @placeholder = "Endereço", @id = "rua" } })
                </div>
                <div class="form-group col-md-1">
                    @Html.LabelFor(model => model.Numero)
                    @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Número" } })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Complemento)
                    @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Complemento" } })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Bairro)
                    @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bairro", @id = "bairro" } })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Estado)
                    @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", @placeholder = "Estado" } })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Cidade)
                    @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cidade" } })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Contato1)
                    @Html.EditorFor(model => model.Contato1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contato" } })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Contato2)
                    @Html.EditorFor(model => model.Contato2, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contato" } })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Profissao)
                    @Html.EditorFor(model => model.Profissao, new { htmlAttributes = new { @class = "form-control", @placeholder = "Profissao" } })
                </div>
            </div>
            <br />

            <button type="submit" class="btn btn-primary">Pagamento</button>
        </form>
    </div>
</div>


<!-- Adicionando Javascript -->
<script type="text/javascript">

    $(document).ready(function () {

        function limpa_formulário_cep() {
            // Limpa valores do formulário de cep.
            $("#rua").val("");
            $("#bairro").val("");
            $("#cidade").val("");
            $("#uf").val("");
            $("#ibge").val("");
        }

        //Quando o campo cep perde o foco.
        $("#cep").blur(function () {

            //Nova variável "cep" somente com dígitos.
            var cep = $(this).val().replace(/\D/g, '');

            //Verifica se campo cep possui valor informado.
            if (cep != "") {

                //Expressão regular para validar o CEP.
                var validacep = /^[0-9]{8}$/;

                //Valida o formato do CEP.
                if (validacep.test(cep)) {

                    //Preenche os campos com "..." enquanto consulta webservice.
                    $("#rua").val("...");
                    $("#bairro").val("...");
                    $("#cidade").val("...");
                    $("#uf").val("...");
                    $("#ibge").val("...");

                    //Consulta o webservice viacep.com.br/
                    $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                        if (!("erro" in dados)) {
                            //Atualiza os campos com os valores da consulta.
                            $("#rua").val(dados.logradouro);
                            $("#bairro").val(dados.bairro);
                            $("#cidade").val(dados.localidade);
                            $("#uf").val(dados.uf);
                            $("#ibge").val(dados.ibge);
                        } //end if.
                        else {
                            //CEP pesquisado não foi encontrado.
                            limpa_formulário_cep();
                            alert("CEP não encontrado.");
                        }
                    });
                } //end if.
                else {
                    //cep é inválido.
                    limpa_formulário_cep();
                    alert("Formato de CEP inválido.");
                }
            } //end if.
            else {
                //cep sem valor, limpa formulário.
                limpa_formulário_cep();
            }
        });
    });

</script>




